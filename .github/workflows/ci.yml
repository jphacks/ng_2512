name: backend-ci

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Prepare image name
        run: echo "IMAGE_REPO=$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - name: Build test image
        run: docker build -f backend/Dockerfile --target test -t $REGISTRY/$IMAGE_REPO/backend:test .
      - name: Run unit tests
        run: docker run --rm $REGISTRY/$IMAGE_REPO/backend:test pytest -q backend/tests -m "not integration"

  integration:
    runs-on: ubuntu-latest
    needs: unit
    steps:
      - uses: actions/checkout@v4
      - name: Prepare image name
        run: echo "IMAGE_REPO=$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - name: Run compose integration tests
        env:
          COMPOSE_DOCKER_CLI_BUILD: 1
          DOCKER_BUILDKIT: 1
        run: docker compose -f docker-compose.test.yml up --build --abort-on-container-exit --exit-code-from api
      - name: Tear down stack
        if: ${{ always() }}
        run: docker compose -f docker-compose.test.yml down -v

  build-and-push:
    runs-on: ubuntu-latest
    needs: integration
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Prepare image name
        run: echo "IMAGE_REPO=$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push production image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: backend/Dockerfile
          target: prod
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_REPO }}/backend:sha-${{ github.sha }}
            ghcr.io/${{ env.IMAGE_REPO }}/backend:latest
